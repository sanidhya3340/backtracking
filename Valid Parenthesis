//Valid Parenthesis
#include<bits/stdc++.h>
using namespace std;

bool contains(string s,vector<string>ans){
    for(int i=0;i<ans.size();i++){
        if(s==ans[i]){
            return true;
        }
    }
    return false;
}

int getMin(string str){
    stack<char> st;

    for(int i=0;i<str.length();i++){
        char ch = str[i];

        if(ch=='('){
            st.push(ch);
        }else if(ch==')'){
            if(st.size() == 0){
                st.push(ch);
            } else if(st.top()==')'){
                st.push(ch);
            } else if(st.top()=='('){
                st.pop();
            }
        }
    }

    return st.size();
}
void solution(string str,int mra,vector<string>ans){
    
    if(mra==0){
        int mrn = getMin(str);
        if(mrn==0){
            // cout<<str<<" "<<mra<<" "<<mrn<<endl;
            if(!contains(str,ans)){
                cout<<str<<endl;
                ans.push_back(str);
            }
        }
        return;
    }
    for(int i=0;i<str.length();i++){
        string left= str.substr(0,i);
        string right=str.substr(i+1);
        solution(left+right,mra-1,ans);
    }
}



int main()
{
    string str="()())()";

    int mr = getMin(str);
    vector<string>ans;
    solution(str,mr,ans);

    return 0;
}
