// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


class Solution
{
    public:
    //Function to find the largest number after k swaps.
    void match(string &str,string &res){
        for(int i=0;i<str.size();i++){
            if(res[i]>str[i])
                return;
            if(res[i]<str[i]){
                res=str;
                return;
            }
        }
    }

    void solve(string str,int index,string &res,int k){

        if(k==0 || index == str.size()-1){
            match(str,res);
            return;
        }

        int maxDigit=0;
        for(int i=index;i<str.size();i++){
            maxDigit = max(maxDigit, str[i] - '0');
        }

        if(str[index] - '0' == maxDigit){
            solve(str,index+1,res,k);
            return;
        }

        for(int i=index+1;i<str.size();i++){
            if(str[i]-'0' == maxDigit){
                swap(str[index],str[i]);
                solve(str,index+1,res,k-1);
                swap(str[index],str[i]);
            }
        }
    }

    string findMaximumNum(string str,int k){
        string res=str;
        solve(str,0,res,k);
        return res;
    }
};

// { Driver Code Starts.

int main()
{
    int t, k;
    string str;

    cin >> t;
    while (t--)
    {
        cin >> k >> str;
        Solution ob;
        cout<< ob.findMaximumNum(str, k) << endl;
    }
    return 0;
}
  // } Driver Code Ends
